
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
      GCP_PROJECT_ID: ${{ secrets.YOUR_GCP_PROJECT_ID }}
      GCP_ZONE: ${{ secrets.YOUR_GCP_ZONE }}
      SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PAT }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/instaroid:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Authenticate Google Cloud CLI
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ env.SERVICE_ACCOUNT_KEY }}'
        project_id: '${{ env.GCP_PROJECT_ID }}'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to Google Compute Engine
      run: |
        IMAGE_NAME="${{ env.DOCKER_USERNAME }}/instaroid:latest"
        INSTANCE_NAME="heavy-server"
        CONTAINER_NAME="instaroid-app"
        GCP_PROJECT="${{ env.GCP_PROJECT_ID }}"
        GCP_ZONE="${{ env.GCP_ZONE }}"
        
        # Combined Docker commands into a single string for gcloud compute ssh
        # Using semicolons to chain commands
        SSH_COMMAND="docker stop ${CONTAINER_NAME} && docker rm ${CONTAINER_NAME} || true; docker rmi -f ${IMAGE_NAME} || true; docker pull ${IMAGE_NAME}; docker run -d -p $(shuf -i 3000-5000 -n 1):3000 --name ${CONTAINER_NAME} ${IMAGE_NAME}"
        
        gcloud compute ssh nandakishorep@${INSTANCE_NAME} --zone=${GCP_ZONE} --project=${GCP_PROJECT} --command="${SSH_COMMAND}"
