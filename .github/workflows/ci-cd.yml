name: CI/CD Pipeline for Heavy Server

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: heavy-server
  DOCKER_CONTAINER_NAME: heavy-server-container
  GCP_INSTANCE_NAME: heavy-server

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Authenticate Google Cloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy to Google Cloud Instance via SSH
        run: |
          gcloud compute ssh ${{ env.GCP_INSTANCE_NAME }} \\
            --project=${{ secrets.YOUR_GCP_PROJECT_ID }} \\
            --zone=${{ secrets.YOUR_GCP_ZONE }} \\
            --command="
              docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest || true && \\
              docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest && \\
              docker stop ${{ env.DOCKER_CONTAINER_NAME }} || true && \\
              docker rm ${{ env.DOCKER_CONTAINER_NAME }} || true && \
              docker run -d --name ${{ env.DOCKER_CONTAINER_NAME }} -p 80:80 ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            "
        env:
          # Pass required secrets as environment variables to the SSH command
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_IMAGE_NAME: ${{ env.DOCKER_IMAGE_NAME }}
          DOCKER_CONTAINER_NAME: ${{ env.DOCKER_CONTAINER_NAME }}